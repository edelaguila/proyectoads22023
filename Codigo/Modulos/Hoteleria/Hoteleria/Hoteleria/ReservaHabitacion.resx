<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBUWFRgVFhYYGBgYGBwaGhgaGhoYGhgaGBgZGhwYGBoc
        IS4lHB4rHxoYJjgmKy8xNTU1GiQ7QDs0Py40NTH/2wBDAQwMDBAPEB4SEh8xKyQlNDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDE0MTQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDT/wAARCAC3ARMDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAABAECAwUGAAcI/8QAShAAAgECAwIJBwoCCQMFAAAAAQIAAxEEITEFEiJB
        UVJhcZGhsQYTMkKBwdEUI2JygpKisuHwwtIVJDNDU2Nzw/EWg+IHdJOjs//EABkBAAMBAQEAAAAAAAAA
        AAAAAAABAgMEBf/EACcRAAICAQUAAQQCAwAAAAAAAAABAhESAxMhMVFBBBQyYXGhIkKB/9oADAMBAAIR
        AxEAPwD0JWkitM/hqzqLowZRlunO3R0HoyllhtoKcm4B5Dp2/G0hSKaLNTHiQoZMspMmjrRbRRFjEMtO
        tHGIYAJaJaLEMQxIhimIYAJGmLEMBiGNMdOgA2IRFMc9OwByz5CD2iSMiiGOMYYAJGmOjqdItpxdIHjA
        KITGmOaNvCwoQxpimNMLGNMQziYhhYCGNMUmJEFDbTgseFj1pxAMCSRKUIpYcnihtPDga5+EaQmwD5Me
        Q9k6Wt50dCsbicDSqG7LwuevBfq3hmR0G4lbX2Q49EiovIbJUHUfRY/cloHhFBs5I+igw28p3QSG13GB
        BsNSAdR0jLpkg2qisFe6EgnPMZEDUaa/rLjadNWQhlDAAkXANiAbEch6Zj8WL1AuZ3Up5kknhZm5OZOW
        sOhrk0dLGowBV1IOhBBBk4rLyzzHEU3QqabFbtYjiOSAXGnH3wvDbadSA98wDvDMWYsBcaj0enWUmLE9
        D84IvnBMnhtqkgENccoNxDU2iY7Ci+3xE3pUrjZIuKiFRYlo0tAvlM75RAdBhaNLQXz8Tz0AoJLxN6DG
        rE87CwoK3o0vBvOzvOQsdE5aNLSE1I01IrCiYtELyEvGmpAdExaNLSIvGl4BRKWjS0iLxC8QUSFohaR3
        igwAcI9Uiol4fRwvL2RibB6VEnihtPCga9klUAZDKLeOhNixLyGviUQXdgvJynqGplXi9t2BKgKo9dzu
        gey/ifZE5JdjUW+i6vOmHqeUy3P9Yb7Ktb2WWdJ3EXtM2LOy+kjL023h2re3thGErAnIg9UNtI2oKTcq
        CeW1j2jObOHhhkQ49uA/1G8DMoy/1hxyGmv3Q4901OMSyuBf0G1N/VMzKZ16p/zR/uSJIuLKaql16nH5
        aZ90g8zc0xzk/I6EfmaG21H+ag/AnwiIn9gfoN3oh/hklFcMKQ4KErpe3TY5jQ5Aa8phGExj8EMLkgZr
        kLkA5g9fFCFp6nj4X4RYSPA07hej/wAIrLQataSrWg9SnwpNTSJSYNInWtHCrEWmJItMckq2TwIKs7zk
        lWkOSO8yOSAuCDzk7zkI8yOSd5kckAIPORyEnQE8eWck8wOSL5gRDB/OTvOSc0RE8yIWMhubXsbaX4r8
        l4m/J/NCd5leSIAYvGmpCjRXkieZXkj5C0C+cib8kxmDR0ZWBsQdCRpnqDcR9HBogCqtgBYC598BWRrD
        MPhiczkI6nSUZgScuFF2IA5SbRpCbJ6KBdJODKWrthBkg3j2Ds1PYJnNs+UrqzJuliLXz3UFwCMhm+vG
        RE5xQ1pyZs6+0UXK+83NXPtOgmf2l5ThbjfCfRThv1FtFPZMs2JqVPTc7p9ROAvUcsx13h+CZEtu0lB5
        SbntIkOcmaKEYj2xeJqG9KnuX9epmevhfBuuLT8ny5D16jOeTQDoBNyB1Why488wdv6QLaW3XQoqot3Y
        rdiSFsL33Rbe6riJKwcqD12LQH92ntW59pOsWVn9I1f8QjqVLezeUntJnR4onM9VIiqJ0VZ2HKCYtfS+
        qR+EzKYTNqrfTB72+M12I1P74pkdmDg1OoHvmUuzRFZT1/7qf/mI6gOBQPUO2k/wjMP63Q6H8AEmww+a
        pdDj+JffJLHU11+3+YyLAJwR7PBTCKS59e93teNwoyPUv5FkspGdxe33Wq6BFO65Ua8RIF8+iLS8pKl/
        7Ne0/GVOMX+s1T/mN3M8dRHePcJk5M2UVRoae33vbcF9O6/LCU26/MH79spKKXf7Wns/SEUl4Vuvuhkw
        xj4XFPbzX9Ad+vbJF2297bgHt+BlVSAFjyEH4whc2v8AW8Y8mLGPgf8A002VkGfSROG225i5G2pgPm+7
        LstC9lYDzpZSSLbp7Vb4d8WUmGMUrJRttuYO+Ku2yfUHa3wh6eToHrsezj9klXYIAObZ9Xwja1BJ6ZUP
        ts8SA21zOXdIxtxuYO0/CTba2aKSBhfhOFztxq2enQJXUksfs590hykuGXGMZK0FDbr5/NjLpP8ALGnb
        55g7W/lkITJh0iC16WvX4iJakhvTiHN5QHmD7zcl+bE/6h+gPvNxfZlRu+B8IwLkP3raVnInBFvU8oDu
        ngDMH1m5PqRW8o7eoPvH+WUlc8EdRHdGVWyHUPCGcgwRfDyjdhZUC9N7+Iy7DGeeZzd2JN+7kvr2WlLh
        mGY6feJZ0jp1j3wbb7BRS6D8Pbi5Zm9tj51+pPyLL+icpn9sf2j9S/kWJlIfhuKWNIZwDDDSWNPWNEMJ
        USr20nDofXP5TLdBK/ai8Oj/AKn8Dn3TWK5MpdEnmxOhYpnknSsTLI9HpVVcXU3EmWUeD2lQRSDVUkm+
        jW0A5OiGU9r0To47D8J0OL8MlKPpLjDYOeQHuQzKbKHAqfUmmxlUMjspuCjZ9SsPdM3sr+yqn6PumUuz
        SPRTYY5P9dfBYThv7MdDr+cfGC4U5P8AWHuhOGPAboYHsYH3STRk1L0h1fCdhhr1L+RYxG4S/vQCSUeP
        qH5VETGjD4u/yipyb7n8T/rHUdRfiPvEbiT8/U+u/wCZ4tIXNuUjvmDOpdFki8MDphGHX8p/ffIaY4Q9
        vdCqA06j3xEkiLxfvO0eicL73viIM4RTI3j9rxlCbEsfZmfaSMv3yS18mhZmPQng5lcB7/GWvk8eE+XM
        HYr5yo9omX4sz2I2gxxNTeqOiJWdTuu+inQAXt2QnD7ZpoEu9d3BvwWO7mbkcNgSOLhd0hAomvXUi5Ne
        oRe9rhrMNRfMk8mWUTEphrFixduMITUI1yy3u+b9Mxq0aXymG8lIctZB95WHvglPZAtcOeEOaMvxQjyg
        bg0f9en4NAPKTaLUkokOy7xK5Ei5IFt4giw6c9dJlhGU3kXnKMFiT/0Prw9TzeT7UY+wifX/AA9H1pn8
        N5QOUVy73c7qrvEksTbdBBsc78fFNZsDEO6MX3r3uLneyKi1jc5StmHwTu6nyY2994chYddja/dIWNgv
        74gZJSHp/Xf8zRGGXsPhOY6hlJd5WGWXHa9rhv0lVtKoVew5B4d0sQ5UWAvvdOlh+sBxlIud7TIZdsYh
        uzKpLNfk94l9SOnWPfKbZ+Fsb9Hvl3RTQfvjjoQVS45Q7WHzj6+r+RZoUX9+wzP7VYeeqD6p/AsJLgE+
        SXDcUsKYzlfhuKWNPWCIkFIYDtX06H+p/tvDlED2p6eH/wBX+B5rHszn0H2nSSdNLZiEnZzcmnVn1WOs
        moYW3IbdF5FVxQCpvgi4IIzAydtAwJ4tdNLcUfhtoXYDLL1ipN15N6+X7ymUPqta6krRjL6aH+raL9hb
        DN9R+8NKfZQ+Yqn6J8Jb1XvhWblRv4hKrAC2GqH6Jmzd8msFSoz+D0fr+EIoHgP9Unsg2D9frhFHRx9B
        vAyDVkiHMdbfmI90lo6t1/CDK/5m/O8Jpekekj8x+EBmExGeIc/Tc/iaS4diM+Sx7LQao3zzn6T/AJjC
        aGtun3iYPs6l0WVB8x9qHUv5u4CV2GThexvEw+iM9eJvHWITJqY4Q64RR1z+lB6TgEE87xh+Cw2/VVRx
        3zte3SBKRLI6akn98ZvLbye1b7P5XleqbrML33Ta40NjJNlYsUrsQxvu2tbiVhncjllRdNMmStNGcx1P
        5+vdL/P1DmDz27pcbF2th6hXeoik4J3TubgueafV0sL9tyZdv5RIPUf8H80afKFM+A+X1P5pq5R9MlGX
        g3yhOVH/ANwng8zPl87ClQK63bjsdF0MttrbSDimQjqEqJUJYLYqqsTbPM5iSUvKGmBuhKhsORM/xSVO
        OTZbhLFKjzvAVHUgkghrNYFlV9zIgm4zNzmcs+SejeStAoKwLbwNW4PRuKLHPisR2Rf+pEF+BUytzb5/
        ajG8qKeu4/4P5o843d/0JxlVUZdDm/Q795PwkjHSQq9t/wCkznt3iL9OcOwWDNUNZlXcUvnxgLp+sw7Z
        vdIAqcXWffIKzaW4lF/GKtUMFI/ec6uRfLjHuggZLhdO33SyonMdY8DKzDnISwoPmOseBjQg6icv3yTO
        7XX52ofq/kSaCm2Uz22n+cqD6v5FhLoUeyfD8UsaQzldhZY0zFEmQaggG1jw8P8A63+28OQyv2u3Dw/+
        t/t1JtHszn0FHGLyHu+M6Qthjzu79Ys14Oe2W+MpB93iK3ta9hwjrbiuT+9YMDSIFiN61+Ed1gDcAgWv
        18cbiHqILOhUaLckb2fqi/T7IlN2Frq2t+EpsATYcIgZaTkSlVBJmufPCHpRvFpWURbBv1GWtDPCjpQ+
        LSqrZYJ+qdPx/wAHEzmC9f2wjD+sOVT4QbBav7ZNhDwvYfCQjZkbNkPrn8zmHodD9L3mVbtwB9Y/vvlg
        H4N+Q/H9IxmDZvnX+u8KoHP2jxECr5Vqq8Yep4290IoNwh1zCR1R6LXCtwsuRvzQynUzPU0rsK9jy+kf
        CFUDr9XxisTQdh14S8l4XTxSU2DNUVMmILOqG1wMrkXzI7ZW03JsFzN8uPjnY/Yr1Su9TvkynhgDdcgk
        EhgBcgZ5kW9oTaXbFT+DQYSom8j5OhI0IIYNbMWyOt+makYGkRummlvqKPATI7NwDU/NUyl1Wy7qOjNu
        gi2Za+gzvxAzZvVsCRmej3TfRaaZhqp2qKHEU0zG6CLkAWBst7AZ9ErMcEUGyJkOavF7JZvTfmP90nwg
        mMwbspG4+YPqtydUmUbOmEkqsFosdxehR27ozgeMrkA2NuqFYfDVVRU825YDMhGtfkBI6pG+z6p/u3+4
        3wkuNotSS7YdsTC0XpqCiMd1Wa4DHea5JufCGnB009FEHUqj3QHyfw9RN4ujBbWA3W3iQT6tr6Wz6ZY1
        XbPgP9xvhKUFRzyk8mAUcGlV3V0VgN0AEeiDe+7zbi+kztNgoLAlN4uBZiLK3q34xbLOazA0itQmzAMo
        1VgN5b65chMy21/J41B5vhcB23ALbzroCW9EXG8bGx4Ok5tW01zSNtKmn6UtQgWtbQ6ct5E76dQ8JI+x
        KlFQq0n3RvG/BbW54j0mBPU4jkRbI5HTkMuDT6dikmuyxwxyMOoN4jwMp8NU1/fGJaUX06x4GaEFjRbI
        +3wMzu3Beq56B3qsvaFTL2+6UO1T84/Uv5REwXYTheKWdHWZOltco+4624e6DcaWB3iL3GRBtrNVh3vK
        SaM20ywpHKVW2zZ8P/rf7dSWLE7psbE8cods03Q4W7XJcE62zRwNePI5zWK+TKT+C834kZ8oU57onS6M
        y4x/kyrOzvVZmOtilx1gre0JwWymU7qEsCBctYXzJzABHIOLSRbQxJoooFndyQqA5j6/JxZdMrMNRqVa
        jLWqMqrb0CArb1st62eR6dDnMcndGu3Fxs2dTG0qdII9RFbdII3he9jxDPume2htegcMaSuC54rNbtIt
        JsNgcMhHAS98r8Mk2JzJuBkNByRuMqUSm5ewJB4KjQZgdEtydfAoxX7KLC2Bc3FjfvhGGoOrAlTbl1Ha
        IS+IpqpCJckg3ezZrexGVgRds7ccr9n44q/AaxBtllmMrWmWVGuNgtV+Aesd/m/jLHf4DdF4/bdEPSFd
        FAud2oFFhvcEhwOndAPs6YErFkdRqVYDrK5S7JoyG0ssTV6Xc+xiGHjOoVLFSNd735xnlC4XEFrjhoja
        jmBP4IPhq63BuMjygeMykjaL4LJto7tVF3S2/cbw0Fza57Zb0W8B3H/iU1CuOUaHjHT0wyniR3HTqH6x
        FB6VFDAuQFBsb6Z5W9pNvbLOjj8Ox3VZCSd0BcyW3t0KBzr2FuXKZqviRYfXpnsqoZtv/T3YACHEVlIZ
        nqFEPErVHO+bcZBy6M/WmsIWYznRYYSl5m5W2+RmbA2HNF+/lkrY+rzvwr8JovklPmL2A+M75JT5ifdX
        4TXbfpK1o+GbG0anOHYsX+kqnOH3V+E0fySnzE+6vwifIqXMT7q/CG3L0e/DwzZ2jV534V+Eado1ecPu
        r8JpDgaXMT7o+Eadn0uYn3RJ25elb8PDNnadXlHYIn9K1fo9h+M0Z2dR5idgjTs+jzE7IbcvQ3tPwzb7
        VqfQ7D8ZS7fwwxKbr2Vh6DpvK6Hr3s15VOXUbEbttn0eYn3RIX2fR5idkNt+hvQ8Pn/auzcXRYqWcj1X
        Wo263acj0Hv1ktGo26u8SWC2JJub3Opnsu19gYasjIyWB4wSLEaEcVweieNbSwTUKr0mz3WyIGTKc1Yd
        Yt1G44pMotLkIyTfBPhMUQ2Z4vfLyhifEeBmTR8+3xlrRrafviMxcqZpVmloVvH4QHG4YuxZSLkAWOmQ
        HHIsNiIXhauZ/fqyuGieUZ3GbLY1N9rqbqbAa7iBQA1+jXSaPD4xQNbnoU2v13v3QtFBB0I5CLgyGtgF
        zK3U9o7NfGDcv5FUf4JhjzaxAuOQ5eJHYxld5QY3eOHyI3agGo5tQ++SpdPTTeXnAn/jwj6lDD1xZiyM
        GDJwt1gd0LkGuG9bllR1OaZEtPiwT5b1zpOdgt/ir7aeft4c6aZGeBtsfg/OBMwroeAT6Ofqt0HT2yor
        UHVyoBXd1TjXotydMvcUpKMFzO6cuXo9untlQ1XztEC+86qTTYm5IUAtTc8Y1tfQjqtOpSZWk20BtXIN
        yZEapMgaoLbxIAOdzl+/0j6Cu/oIz9IFh942HfMrNqCFeRUqK+cuVBv0Z9RMscLsOs3pMqDkHCbtNgD7
        DLvDbCpKMwWPOJN+6wHslRi2RKSorcI4ak9Mm6mm+up3TvLeZ/DYob7JezZZaeqOWaPaOzloI7rUBARy
        Vb0hcMTY6HW3FoOOZzD4XO/LBWnTB01aG+Z32vbK1h1XJ98MpYTohNHDdEsKGEjpsLSA6eCkj4PiVT0m
        0t6WHtCkSGLDJGTxexi6FQWQ5EMFuQVYMCOyeiYSkEpoi+iihQByKAoAzyyEqysCXb39WBeyk1KtMHkF
        Oo6Z9NlHbeaweN2ZTjlVF6MUvOHaIhxa84dsyH9JUuf4zv6Rpc/uMX3D8K2F6bD5WvOHaInytecO2ZA7
        Upc89hjDtikP7zuPwi+4fg9hemx+Vrzh2zvla84dsxZ2zS/xO79IxtuUf8T8J+EX3L8DYXptWxi84dsh
        bGLyzGnbtH/E/CfhJMN5QUVcNv3tkRuHMHIjT92Ea+o55QPQpcMuD5VYPeZTiaQZSVYM6qQQbEEMRneF
        Utoo6hkdXU6MrBgbGxsRkc7zF4rDbKqO1RqZ32tch6g0AXIXtoBnacpw1NQuGLJwrkEu4NxnrcroMhlr
        yzSWtFK1yZrSk3T4NdiXNphfKPZqvVViBcJum4vo7keMtF20FbdN26gbZ9djAsFtZMQ9RlAKo+4pI1AU
        XNjoN7ft0ATPVncbRppxqVMoqmxlIyAUjQgW9jAeOsBagUNmFv2e6bVwvNHYIJisMjixHURkR1TlfJ0L
        gzNM27YZhKnCI/foyPE4RqZ5VOh/eh6PGMoPw29n5BBOgfJf4Zv32Qt9D1+8yvwr6w/ey9onQnZk0ciD
        M6HPTrguIwKtqtulcu1dPfC1HfcdhMmpHw90HFMVtFJ8gcaObcXDYd3FOlt5sTpOCLzZpUq8Y05ZUVcO
        aVVioG4x84hF8jcB01sLHdIy0boJlNiMC1Nt7D1Ga19ciQHKCxvZ72HIMz1Q7Zm1fPK61Bw1W5F902vu
        3QAWBG8bi1tDyWqU1JU+GZRg4u1ygzYSYdRU31QulZ1BIBbdyItfQZmWlTbVFNP0mMxeFqPiKop3bhC5
        BsPR9Y3t2HPiPLPT2C5Uu7hQDoLsQOXfbTv0ii3VJFNK7bLnE+WCKbLa/RnpkdLypxHlNWcndB9psOPi
        Fz/xIn2WgC1ACKe+FzNi6neU1GItYb1gByZnXKWps5FBOHYsczu2vTOXP9EdvsibkxpRRU401qqlnfeV
        QWKAlVupyvqTmOPLgmbLAYIFEbUlFN+tQZgsZtdglVaK02a5DXccFTvAlTcK2ZOhPp3zEpcP5U4kMoqY
        l1RbDdRt0ADK1qdr5cs00oXyyNV1we1UsIBCkpzz3DeXrkXRQU0U1Ll23dXO6wtc8Wfo344XT8vH9ZE9
        gb3tNHinRcPpdaUVJLv9m9WnF3Zndk+V1KqQhBRjoDx9Wo778gmjDx0mZThODqSoRltKjbaABFGQ4Z6y
        zXJ7c5bNKbbTG6Xt61rfZ1y6opViyYt5IoUxmZBW1i4GfNfd5OPWI+N+jf7X6SPD0S7PuhDbf9Jilrud
        CFa8X5K4OiHkAqdFubJhCLjbRUpNS4G/LTf0Pxf+M417Z7h1PrH1T1R9PCVAb7iH7Y6+bEq0q2fAp8f9
        8Ba//b649uPhOcvSJMbkT5vNTpvcvH6MVNo/5f4//GRrSqqb7idNqwPigkTUX5n/ANlP3tE9OPhWciYb
        Q3j/AGf4uT7Ma2Otbgfi5PsyAI4/uz/8lP8Anisz3F6LZcj0T4vDbiGciU436H4v0kmHcPvcC1lBvcH0
        rdHTA2qPawov171Du+dlhgVsr5EcFMja4yGtiRfqJmc4pLguEpN8gVReHYcY5OSVvk7g2os6lgVYgqeO
        4LZMOI8Lqy9ksMRXKubUqr5ZFEDA5cu8I/D4FzmVK3N7HUX4pD/FI0i/8mHIY4oJImFaSiiZFFNgFWmC
        LEXB9olHi9nlDvLmOPoy9bo6e2as0ZC9G0qhXRn8LU15ZaI+XtEgxWzvWQfZ/l+Eio1crHI3Hd7+iNcC
        fJa72QP0j33jqTZfZPu+MF38gOm8npHw/fhNEZs5WixoBnQGNw1Co5XhWzGQA496pqfadIuD2PUTFB9z
        5q26+9a5O4QxGdzdrEfVBErhTx5B4ToFvfhono3B9A3PokeySPgMaBnVzFx/avfgioT6v+U/YJnX6Hf7
        Qfhqxp4twytw34PGXXdUJujJdFfMkezdk2JxO+SjsqICC1iHZioDBLWtbS/pDizzmcxOMxNNglYkkXCl
        iG0NiUfXi0PFbKWeA2cHRXdgVIuES4B1vvt6Ra976WN8zKjb4QpUuWOxmOpurIiPVY6NcsUs1wyjMLpx
        Aayr2/Wr1Cq1QUpkXCA5OwNjvkHMAbpseWapN1BuqAo5AAB3QLaTAo+8u8ApNukC4tyHSaqFcsNPUUZJ
        0Y2tRDKVtkRawy7LaTNtsY31M9FfYV/Rcj6yhuzdK274O/k8/PTr3W8Lxt0ju3Pp5u5ox+HwZXQmHohm
        jo+TWfCq5cipY/eZj4QnZGy6Q3iV32ViAX4Xond9H0b7ysb2vM6Oh/V6UFUEVuwtmu7q5FkUht7Tesb2
        Tl010HXlPRqW0h6wK947pUgRwEFKjztfVetK2aBagYXBuJU7bbNL/S/gkdFypyP/AB08ss6QStbfUFl4
        rnK9r2segS28lRzVi7M5QoYZlDMoZ+FfMmxLm+V7ckJFJPVTL2y9TZdFfRRR1dMf8iTklx4RD5Zn2w5P
        Fb2xnyLrmh+Rr+7zjhRHkhUzPfI435LNCcKIgwo5IZIKZnGwZjDhDNIcMsT5Osm0OmZv5J0Ry4fdVzy7
        vcbTQnDpG1cKhFiMusjwkypqio2mZ2gy5g6iGKQeWHps2mDcL7SSfEyYYdRxTPF0XlyV6r0Gd5syy82I
        0pDAeYAaJjDR5ZYFY0pCgsq3o2geKwAfMZN3N1/GXrJBqlK3VGkFmecMtgw9G/WL8vKOn/mE0DrLCtQD
        Cx9h4xK40WQ6fA66chz0/wCYVQsrHhjYdQ8J0jSqoGbW6DladAoucQnBfpFQ9pxp9w7JFUxANUqg3m38
        78FRetXGZte3z1sgZ06UyEUO3CGpNvHeYbhXKyoWTOw1JPmwCSTpcAXkvkxULUiOa5t1MAbdtz7Z06RD
        8ipfiWxA44Ni1yUc51HsDBiOwGdOmzIQQqkzgl506ZspDrQHZos7g8rH71fEHwtOnRFIslzjhOnRAOBF
        7fvX9IRham6wPTnOnRksvN6dvTp02MxpMaTOnSQOnLOnQGNYRrTp0QDI1p06IYiHiimdOgAwxpE6dABp
        jJ06IYhiERZ0ABqtO2kGexFiJ06UiQRsNyGLOnQpDs//2Q==
</value>
  </data>
</root>